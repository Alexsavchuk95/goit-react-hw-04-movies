{"version":3,"sources":["components/MovieDetailsPage/Article.module.css","components/services/api.js","components/HomePage/ArticleList/ArticleList.jsx","components/HomePage/HomePage.jsx","components/MoviesPage/SearchFrom/SearchForm.jsx","components/MoviesPage/MovieList/MovieList.jsx","components/MoviesPage/MoviesPage.jsx","components/MovieDetailsPage/Article.jsx","components/Additional-information/AdditionalInformation.jsx","components/Cast/CastInfo.jsx","components/Cast/Cast.jsx","components/Reviews/ReviewsInfo.jsx","components/Reviews/Reviews.jsx","components/MovieDetailsPage/MovieDetailsPage.jsx","components/Nav/Nav.jsx","components/App/App.jsx","index.js"],"names":["module","exports","API_URL","API_KEY","getCast","id","axios","get","then","response","data","getReviews","getSearch","query","results","fetchItemById","getItems","withRouter","items","location","map","item","key","to","pathname","state","from","title","HomePage","articles","api","setState","catch","error","console","log","this","Component","SearchForm","value","handleChange","e","target","handleSubmit","preventDefault","props","onSubmit","type","placeholder","onChange","moviesList","el","MoviesPage","getQuery","search","URLSearchParams","handleSearch","history","push","result","length","Article","poster_path","vote_average","overview","genres","className","style","wrapper","src","alt","filmDeatails","genre","name","AdditionalInfo","url","CastInfo","character","profile_path","image","Cast","cast","match","params","movieId","ReviewsInfo","author","content","Reviews","reviews","MovieDetailsPage","article","onGoBack","path","getPathFromProps","getStateFromProps","onClick","component","active","color","Nav","exact","activeStyle","App","body","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7f69421e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Article_wrapper__31Rsj\",\"filmDeatails\":\"Article_filmDeatails__1659K\"};","import axios from 'axios';\n\nconst API_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'd8dcb4364bbf117ca1565b75f1e0ef61';\n\nconst getItems = () =>\n  axios.get(`${API_URL}trending/movie/day?api_key=${API_KEY}`);\n\nconst fetchItemById = id => {\n  return axios\n    .get(\n      `https://api.themoviedb.org/3/movie/${id}?api_key=d8dcb4364bbf117ca1565b75f1e0ef61`,\n    )\n    .then(response => response.data);\n};\n\nconst getCast = id => {\n  return axios\n    .get(`${API_URL}movie/${id}/credits?api_key=${API_KEY}`)\n    .then(response => response.data);\n};\n\nconst getReviews = id => {\n  return axios\n    .get(`${API_URL}movie/${id}/reviews?api_key=${API_KEY}`)\n    .then(response => response.data);\n};\n\nconst getSearch = query => {\n  return axios\n    .get(`${API_URL}search/movie?api_key=${API_KEY}&${query}`)\n    .then(response => response.data.results);\n};\n\nexport default { getCast, getReviews, getSearch, fetchItemById, getItems };\n","import React from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst ArticleList = ({ items, location }) => (\n  <ul>\n    {items.map(item => (\n      <li key={item.id}>\n        <Link\n          to={{\n            pathname: `/movies/${item.id}`,\n            state: { from: location },\n          }}\n        >\n          {item.title}{' '}\n        </Link>\n      </li>\n    ))}\n  </ul>\n);\n\nArticleList.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.object).isRequired,\n  location: PropTypes.shape({\n    state: PropTypes.string,\n  }).isRequired,\n};\n\nexport default withRouter(ArticleList);\n","import React, { Component } from 'react';\nimport api from '../services/api';\nimport ArticleList from './ArticleList/ArticleList';\n\nexport default class HomePage extends Component {\n  state = {\n    articles: [],\n  };\n\n  componentDidMount() {\n    api\n      .getItems()\n      .then(({ data }) => {\n        this.setState({\n          articles: data.results,\n        });\n      })\n      .catch(error => console.log('erorr', error));\n  }\n\n  render() {\n    const { articles } = this.state;\n    return <ArticleList items={articles} />;\n  }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class SearchForm extends Component {\n  static propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n  };\n\n  state = {\n    value: '',\n  };\n\n  handleChange = e => {\n    this.setState({ value: e.target.value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.onSubmit(this.state.value);\n    this.setState({\n      value: '',\n    });\n  };\n\n  render() {\n    const { value } = this.state;\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <input\n          type=\"text\"\n          value={value}\n          placeholder=\"Search images...\"\n          onChange={this.handleChange}\n        />\n      </form>\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link, withRouter } from 'react-router-dom';\n\nconst MoviesList = ({ moviesList, location }) => {\n  return (\n    <div>\n      <ul>\n        {moviesList.map(el => (\n          <li key={el.id}>\n            <Link\n              to={{ pathname: `/movies/${el.id}`, state: { from: location } }}\n            >\n              {el.title}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default withRouter(MoviesList);\n\nMoviesList.propTypes = {\n  moviesList: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n    }).isRequired,\n  ).isRequired,\n  location: PropTypes.shape({\n    search: PropTypes.string.isRequired,\n  }).isRequired,\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport api from '../services/api';\nimport SearchForm from './SearchFrom/SearchForm';\nimport MoviesList from './MovieList/MovieList';\n\nexport default class MoviesPage extends Component {\n  state = { moviesList: null };\n\n  componentDidMount() {\n    const query = this.getQuery();\n    if (query) {\n      api.getSearch(`query=${query}`).then(data => {\n        this.setState({\n          moviesList: data,\n        });\n      });\n    }\n  }\n\n  getQuery = () => {\n    const { search } = this.props.location;\n    const searchParams = new URLSearchParams(search);\n    return searchParams.get('query');\n  };\n\n  handleSearch = query => {\n    const { location, history } = this.props;\n    if (query) {\n      history.push({ ...location, search: `query=${query}` });\n      api.getSearch(`query=${query}`).then(data => {\n        this.setState({\n          moviesList: data,\n        });\n      });\n    }\n  };\n\n  render() {\n    const { moviesList } = this.state;\n    let result;\n    if (moviesList) {\n      result = (\n        <div>\n          {moviesList.length > 0 ? (\n            <MoviesList moviesList={moviesList} />\n          ) : (\n            <p>Movies not found</p>\n          )}\n        </div>\n      );\n    }\n    return (\n      <div>\n        <SearchForm onSubmit={this.handleSearch} />\n        {!!result && result}\n      </div>\n    );\n  }\n}\n\nMoviesPage.propTypes = {\n  location: PropTypes.shape({\n    search: PropTypes.string.isRequired,\n  }).isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n  }).isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport style from './Article.module.css';\n\nconst Article = ({ poster_path, title, vote_average, overview, genres }) => (\n  <article className={style.wrapper}>\n    <div>\n      <img src={`https://image.tmdb.org/t/p/w300/${poster_path}`} alt={title} />\n    </div>\n    <div className={style.filmDeatails}>\n      <h1>{title}</h1>\n      <p>Vote: {vote_average}</p>\n      <h3>Overview</h3>\n      <p>{overview}</p>\n      <h4>Genres</h4>\n      {genres.map(genre => (\n        <li key={genre.id}>\n          <p>{genre.name}</p>\n        </li>\n      ))}\n    </div>\n  </article>\n);\n\nArticle.propTypes = {\n  poster_path: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  vote_average: PropTypes.number.isRequired,\n  overview: PropTypes.string.isRequired,\n  genres: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      name: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n};\n\nexport default Article;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst AdditionalInfo = ({ url, state }) => {\n  return (\n    <>\n      <h3>Additional information</h3>\n      <ul>\n        <li>\n          <Link\n            to={{\n              pathname: `${url}/cast`,\n              state,\n            }}\n          >\n            Cast\n          </Link>\n        </li>\n        <li>\n          <Link\n            to={{\n              pathname: `${url}/reviews`,\n              state,\n            }}\n          >\n            Reviews\n          </Link>\n        </li>\n      </ul>\n    </>\n  );\n};\nexport default AdditionalInfo;\n\nAdditionalInfo.propTypes = {\n  url: PropTypes.string.isRequired,\n  state: PropTypes.shape({\n    from: PropTypes.shape({\n      pathname: PropTypes.string.isRequired,\n    }).isRequired,\n  }).isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst CastInfo = ({ name, character, profile_path }) => {\n  const image = profile_path\n    ? `https://image.tmdb.org/t/p/w200/${profile_path}`\n    : 'noimage.png';\n  return (\n    <li>\n      <img alt={`actor ${name}`} src={image} />\n      <p>{name}</p>\n      {!!character && <p>character: {character}</p>}\n    </li>\n  );\n};\n\nexport default CastInfo;\n\nCastInfo.propTypes = {\n  name: PropTypes.string.isRequired,\n  character: PropTypes.string.isRequired,\n  profile_path: PropTypes.string.isRequired,\n};\n","import React, { Component } from 'react';\nimport api from '../services/api';\nimport CastInfo from './CastInfo';\n\nconst getIdFromProps = props => props.match.params.movieId;\n\nexport default class Cast extends Component {\n  state = { cast: [] };\n\n  componentDidMount() {\n    const id = getIdFromProps(this.props);\n    api.getCast(id).then(data => {\n      this.setState({\n        cast: data.cast,\n      });\n    });\n  }\n\n  render() {\n    const { cast } = this.state;\n    return (\n      <>{!!cast.length && cast.map(el => <CastInfo key={el.id} {...el} />)}</>\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ReviewsInfo = ({ author, content }) => {\n  return (\n    <li>\n      <h3>Author: {author}</h3>\n      <p>{content}</p>\n    </li>\n  );\n};\n\nexport default ReviewsInfo;\nReviewsInfo.propTypes = {\n  author: PropTypes.string.isRequired,\n  content: PropTypes.string.isRequired,\n};\n","import React, { Component } from 'react';\nimport api from '../services/api';\nimport ReviewsInfo from './ReviewsInfo';\n\nconst getIdFromProps = props => props.match.params.movieId;\nexport default class Reviews extends Component {\n  state = { reviews: [] };\n\n  componentDidMount() {\n    const id = getIdFromProps(this.props);\n    api.getReviews(id).then(data => {\n      this.setState({\n        reviews: data.results,\n      });\n    });\n  }\n\n  render() {\n    const { reviews } = this.state;\n\n    return (\n      <div>\n        {!!reviews && reviews.length > 0 && (\n          <ul>\n            {reviews.map(el => (\n              <ReviewsInfo key={el.id} {...el} />\n            ))}\n          </ul>\n        )}\n        {!!reviews && reviews.length === 0 && (\n          <p>We dont have any reviews for this movie</p>\n        )}\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Route } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport Article from './Article';\nimport AdditionalInfo from '../Additional-information/AdditionalInformation';\nimport Cast from '../Cast/Cast';\nimport Reviews from '../Reviews/Reviews';\nimport api from '../services/api';\n\nconst getIdFromProps = props => props.match.params.movieId;\nconst getUrlFromProps = props => props.match.url;\nconst getPathFromProps = props => props.match.path;\nconst getStateFromProps = props => props.location.state;\n\nexport default class MovieDetailsPage extends Component {\n  static propTypes = {\n    history: PropTypes.shape({\n      push: PropTypes.func.isRequired,\n    }).isRequired,\n    match: PropTypes.shape({\n      path: PropTypes.string.isRequired,\n    }).isRequired,\n    location: PropTypes.shape({\n      state: PropTypes.shape({\n        from: PropTypes.object,\n      }),\n    }).isRequired,\n  };\n\n  state = {\n    article: null,\n  };\n\n  componentDidMount() {\n    const id = getIdFromProps(this.props);\n    api.fetchItemById(id).then(article => this.setState({ article }));\n  }\n\n  onGoBack = () => {\n    const { history, location } = this.props;\n    if (location.state) {\n      return history.push(location.state.from);\n    }\n    return history.push('/');\n  };\n\n  render() {\n    const { article } = this.state;\n    const url = getUrlFromProps(this.props);\n    const path = getPathFromProps(this.props);\n    const state = getStateFromProps(this.props);\n    return (\n      <div>\n        <button type=\"button\" onClick={this.onGoBack}>\n          Go back\n        </button>\n        {article && <Article {...article} />}\n        <AdditionalInfo url={url} state={state} />\n        <Route path={`${path}/cast`} component={Cast} />\n        <Route path={`${path}/reviews`} component={Reviews} />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst active = {\n  color: 'black',\n};\n\nconst Nav = () => (\n  <ul>\n    <li>\n      <NavLink to=\"/\" exact activeStyle={active}>\n        Home\n      </NavLink>\n    </li>\n    <li>\n      <NavLink to=\"/movies\" activeStyle={active}>\n        Movies\n      </NavLink>\n    </li>\n  </ul>\n);\n\nexport default Nav;\n","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport style from './App.module.css';\nimport HomePage from '../HomePage/HomePage';\nimport MoviesPage from '../MoviesPage/MoviesPage';\nimport MovieDetailsPage from '../MovieDetailsPage/MovieDetailsPage';\nimport Nav from '../Nav/Nav';\n\nconst App = () => {\n  return (\n    <div className={style.body}>\n      <Nav />\n      <Switch>\n        <Route path=\"/\" exact component={HomePage} />\n        <Route path=\"/movies/:movieId\" component={MovieDetailsPage} />\n        <Route path=\"/movies\" component={MoviesPage} />\n      </Switch>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport App from './components/App/App';\n\nReactDOM.render(\n  <BrowserRouter>\n    <Route component={App} />\n  </BrowserRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}